

#pragma once

#ifndef GO_MOC_1c4313_H
#define GO_MOC_1c4313_H

#include <stdint.h>

#ifdef __cplusplus
class WalletModel1c4313;
void WalletModel1c4313_WalletModel1c4313_QRegisterMetaTypes();
class AddressDetails1c4313;
void AddressDetails1c4313_AddressDetails1c4313_QRegisterMetaTypes();
class AddressList1c4313;
void AddressList1c4313_AddressList1c4313_QRegisterMetaTypes();
class TransactionDetails1c4313;
void TransactionDetails1c4313_TransactionDetails1c4313_QRegisterMetaTypes();
class Wallet1c4313;
void Wallet1c4313_Wallet1c4313_QRegisterMetaTypes();
extern "C" {
#endif

struct Moc_PackedString { char* data; long long len; };
struct Moc_PackedList { void* data; long long len; };
struct Moc_PackedString AddressDetails1c4313_Address(void* ptr);
struct Moc_PackedString AddressDetails1c4313_AddressDefault(void* ptr);
void AddressDetails1c4313_SetAddress(void* ptr, struct Moc_PackedString address);
void AddressDetails1c4313_SetAddressDefault(void* ptr, struct Moc_PackedString address);
void AddressDetails1c4313_ConnectAddressChanged(void* ptr);
void AddressDetails1c4313_DisconnectAddressChanged(void* ptr);
void AddressDetails1c4313_AddressChanged(void* ptr, struct Moc_PackedString address);
float AddressDetails1c4313_AddressSky(void* ptr);
float AddressDetails1c4313_AddressSkyDefault(void* ptr);
void AddressDetails1c4313_SetAddressSky(void* ptr, float addressSky);
void AddressDetails1c4313_SetAddressSkyDefault(void* ptr, float addressSky);
void AddressDetails1c4313_ConnectAddressSkyChanged(void* ptr);
void AddressDetails1c4313_DisconnectAddressSkyChanged(void* ptr);
void AddressDetails1c4313_AddressSkyChanged(void* ptr, float addressSky);
int AddressDetails1c4313_AddressCoinHours(void* ptr);
int AddressDetails1c4313_AddressCoinHoursDefault(void* ptr);
void AddressDetails1c4313_SetAddressCoinHours(void* ptr, int addressCoinHours);
void AddressDetails1c4313_SetAddressCoinHoursDefault(void* ptr, int addressCoinHours);
void AddressDetails1c4313_ConnectAddressCoinHoursChanged(void* ptr);
void AddressDetails1c4313_DisconnectAddressCoinHoursChanged(void* ptr);
void AddressDetails1c4313_AddressCoinHoursChanged(void* ptr, int addressCoinHours);
int AddressDetails1c4313_AddressDetails1c4313_QRegisterMetaType();
int AddressDetails1c4313_AddressDetails1c4313_QRegisterMetaType2(char* typeName);
int AddressDetails1c4313_AddressDetails1c4313_QmlRegisterType();
int AddressDetails1c4313_AddressDetails1c4313_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* AddressDetails1c4313___children_atList(void* ptr, int i);
void AddressDetails1c4313___children_setList(void* ptr, void* i);
void* AddressDetails1c4313___children_newList(void* ptr);
void* AddressDetails1c4313___dynamicPropertyNames_atList(void* ptr, int i);
void AddressDetails1c4313___dynamicPropertyNames_setList(void* ptr, void* i);
void* AddressDetails1c4313___dynamicPropertyNames_newList(void* ptr);
void* AddressDetails1c4313___findChildren_atList(void* ptr, int i);
void AddressDetails1c4313___findChildren_setList(void* ptr, void* i);
void* AddressDetails1c4313___findChildren_newList(void* ptr);
void* AddressDetails1c4313___findChildren_atList3(void* ptr, int i);
void AddressDetails1c4313___findChildren_setList3(void* ptr, void* i);
void* AddressDetails1c4313___findChildren_newList3(void* ptr);
void* AddressDetails1c4313___qFindChildren_atList2(void* ptr, int i);
void AddressDetails1c4313___qFindChildren_setList2(void* ptr, void* i);
void* AddressDetails1c4313___qFindChildren_newList2(void* ptr);
void* AddressDetails1c4313_NewAddressDetails(void* parent);
void AddressDetails1c4313_DestroyAddressDetails(void* ptr);
void AddressDetails1c4313_DestroyAddressDetailsDefault(void* ptr);
void AddressDetails1c4313_ChildEventDefault(void* ptr, void* event);
void AddressDetails1c4313_ConnectNotifyDefault(void* ptr, void* sign);
void AddressDetails1c4313_CustomEventDefault(void* ptr, void* event);
void AddressDetails1c4313_DeleteLaterDefault(void* ptr);
void AddressDetails1c4313_DisconnectNotifyDefault(void* ptr, void* sign);
char AddressDetails1c4313_EventDefault(void* ptr, void* e);
char AddressDetails1c4313_EventFilterDefault(void* ptr, void* watched, void* event);
void AddressDetails1c4313_TimerEventDefault(void* ptr, void* event);
void AddressList1c4313_ConnectAddAddress(void* ptr);
void AddressList1c4313_DisconnectAddAddress(void* ptr);
void AddressList1c4313_AddAddress(void* ptr, void* transaction);
void AddressList1c4313_ConnectRemoveAddress(void* ptr);
void AddressList1c4313_DisconnectRemoveAddress(void* ptr);
void AddressList1c4313_RemoveAddress(void* ptr, int index);
struct Moc_PackedList AddressList1c4313_Roles(void* ptr);
struct Moc_PackedList AddressList1c4313_RolesDefault(void* ptr);
void AddressList1c4313_SetRoles(void* ptr, void* roles);
void AddressList1c4313_SetRolesDefault(void* ptr, void* roles);
void AddressList1c4313_ConnectRolesChanged(void* ptr);
void AddressList1c4313_DisconnectRolesChanged(void* ptr);
void AddressList1c4313_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList AddressList1c4313_Addresses(void* ptr);
struct Moc_PackedList AddressList1c4313_AddressesDefault(void* ptr);
void AddressList1c4313_SetAddresses(void* ptr, void* addresses);
void AddressList1c4313_SetAddressesDefault(void* ptr, void* addresses);
void AddressList1c4313_ConnectAddressesChanged(void* ptr);
void AddressList1c4313_DisconnectAddressesChanged(void* ptr);
void AddressList1c4313_AddressesChanged(void* ptr, void* addresses);
int AddressList1c4313_AddressList1c4313_QRegisterMetaType();
int AddressList1c4313_AddressList1c4313_QRegisterMetaType2(char* typeName);
int AddressList1c4313_AddressList1c4313_QmlRegisterType();
int AddressList1c4313_AddressList1c4313_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int AddressList1c4313_____itemData_keyList_atList(void* ptr, int i);
void AddressList1c4313_____itemData_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____itemData_keyList_newList(void* ptr);
int AddressList1c4313_____roleNames_keyList_atList(void* ptr, int i);
void AddressList1c4313_____roleNames_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____roleNames_keyList_newList(void* ptr);
int AddressList1c4313_____setItemData_roles_keyList_atList(void* ptr, int i);
void AddressList1c4313_____setItemData_roles_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____setItemData_roles_keyList_newList(void* ptr);
void* AddressList1c4313___changePersistentIndexList_from_atList(void* ptr, int i);
void AddressList1c4313___changePersistentIndexList_from_setList(void* ptr, void* i);
void* AddressList1c4313___changePersistentIndexList_from_newList(void* ptr);
void* AddressList1c4313___changePersistentIndexList_to_atList(void* ptr, int i);
void AddressList1c4313___changePersistentIndexList_to_setList(void* ptr, void* i);
void* AddressList1c4313___changePersistentIndexList_to_newList(void* ptr);
int AddressList1c4313___dataChanged_roles_atList(void* ptr, int i);
void AddressList1c4313___dataChanged_roles_setList(void* ptr, int i);
void* AddressList1c4313___dataChanged_roles_newList(void* ptr);
void* AddressList1c4313___itemData_atList(void* ptr, int v, int i);
void AddressList1c4313___itemData_setList(void* ptr, int key, void* i);
void* AddressList1c4313___itemData_newList(void* ptr);
struct Moc_PackedList AddressList1c4313___itemData_keyList(void* ptr);
void* AddressList1c4313___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void AddressList1c4313___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* AddressList1c4313___layoutAboutToBeChanged_parents_newList(void* ptr);
void* AddressList1c4313___layoutChanged_parents_atList(void* ptr, int i);
void AddressList1c4313___layoutChanged_parents_setList(void* ptr, void* i);
void* AddressList1c4313___layoutChanged_parents_newList(void* ptr);
void* AddressList1c4313___match_atList(void* ptr, int i);
void AddressList1c4313___match_setList(void* ptr, void* i);
void* AddressList1c4313___match_newList(void* ptr);
void* AddressList1c4313___mimeData_indexes_atList(void* ptr, int i);
void AddressList1c4313___mimeData_indexes_setList(void* ptr, void* i);
void* AddressList1c4313___mimeData_indexes_newList(void* ptr);
void* AddressList1c4313___persistentIndexList_atList(void* ptr, int i);
void AddressList1c4313___persistentIndexList_setList(void* ptr, void* i);
void* AddressList1c4313___persistentIndexList_newList(void* ptr);
void* AddressList1c4313___roleNames_atList(void* ptr, int v, int i);
void AddressList1c4313___roleNames_setList(void* ptr, int key, void* i);
void* AddressList1c4313___roleNames_newList(void* ptr);
struct Moc_PackedList AddressList1c4313___roleNames_keyList(void* ptr);
void* AddressList1c4313___setItemData_roles_atList(void* ptr, int v, int i);
void AddressList1c4313___setItemData_roles_setList(void* ptr, int key, void* i);
void* AddressList1c4313___setItemData_roles_newList(void* ptr);
struct Moc_PackedList AddressList1c4313___setItemData_roles_keyList(void* ptr);
int AddressList1c4313_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void AddressList1c4313_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int AddressList1c4313_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void AddressList1c4313_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* AddressList1c4313___children_atList(void* ptr, int i);
void AddressList1c4313___children_setList(void* ptr, void* i);
void* AddressList1c4313___children_newList(void* ptr);
void* AddressList1c4313___dynamicPropertyNames_atList(void* ptr, int i);
void AddressList1c4313___dynamicPropertyNames_setList(void* ptr, void* i);
void* AddressList1c4313___dynamicPropertyNames_newList(void* ptr);
void* AddressList1c4313___findChildren_atList(void* ptr, int i);
void AddressList1c4313___findChildren_setList(void* ptr, void* i);
void* AddressList1c4313___findChildren_newList(void* ptr);
void* AddressList1c4313___findChildren_atList3(void* ptr, int i);
void AddressList1c4313___findChildren_setList3(void* ptr, void* i);
void* AddressList1c4313___findChildren_newList3(void* ptr);
void* AddressList1c4313___qFindChildren_atList2(void* ptr, int i);
void AddressList1c4313___qFindChildren_setList2(void* ptr, void* i);
void* AddressList1c4313___qFindChildren_newList2(void* ptr);
void* AddressList1c4313___roles_atList(void* ptr, int v, int i);
void AddressList1c4313___roles_setList(void* ptr, int key, void* i);
void* AddressList1c4313___roles_newList(void* ptr);
struct Moc_PackedList AddressList1c4313___roles_keyList(void* ptr);
void* AddressList1c4313___setRoles_roles_atList(void* ptr, int v, int i);
void AddressList1c4313___setRoles_roles_setList(void* ptr, int key, void* i);
void* AddressList1c4313___setRoles_roles_newList(void* ptr);
struct Moc_PackedList AddressList1c4313___setRoles_roles_keyList(void* ptr);
void* AddressList1c4313___rolesChanged_roles_atList(void* ptr, int v, int i);
void AddressList1c4313___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* AddressList1c4313___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList AddressList1c4313___rolesChanged_roles_keyList(void* ptr);
void* AddressList1c4313___addresses_atList(void* ptr, int i);
void AddressList1c4313___addresses_setList(void* ptr, void* i);
void* AddressList1c4313___addresses_newList(void* ptr);
void* AddressList1c4313___setAddresses_addresses_atList(void* ptr, int i);
void AddressList1c4313___setAddresses_addresses_setList(void* ptr, void* i);
void* AddressList1c4313___setAddresses_addresses_newList(void* ptr);
void* AddressList1c4313___addressesChanged_addresses_atList(void* ptr, int i);
void AddressList1c4313___addressesChanged_addresses_setList(void* ptr, void* i);
void* AddressList1c4313___addressesChanged_addresses_newList(void* ptr);
int AddressList1c4313_____roles_keyList_atList(void* ptr, int i);
void AddressList1c4313_____roles_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____roles_keyList_newList(void* ptr);
int AddressList1c4313_____setRoles_roles_keyList_atList(void* ptr, int i);
void AddressList1c4313_____setRoles_roles_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____setRoles_roles_keyList_newList(void* ptr);
int AddressList1c4313_____rolesChanged_roles_keyList_atList(void* ptr, int i);
void AddressList1c4313_____rolesChanged_roles_keyList_setList(void* ptr, int i);
void* AddressList1c4313_____rolesChanged_roles_keyList_newList(void* ptr);
void* AddressList1c4313_NewAddressList(void* parent);
void AddressList1c4313_DestroyAddressList(void* ptr);
void AddressList1c4313_DestroyAddressListDefault(void* ptr);
char AddressList1c4313_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long AddressList1c4313_FlagsDefault(void* ptr, void* index);
void* AddressList1c4313_IndexDefault(void* ptr, int row, int column, void* parent);
void* AddressList1c4313_SiblingDefault(void* ptr, int row, int column, void* idx);
void* AddressList1c4313_BuddyDefault(void* ptr, void* index);
char AddressList1c4313_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char AddressList1c4313_CanFetchMoreDefault(void* ptr, void* parent);
int AddressList1c4313_ColumnCountDefault(void* ptr, void* parent);
void* AddressList1c4313_DataDefault(void* ptr, void* index, int role);
void AddressList1c4313_FetchMoreDefault(void* ptr, void* parent);
char AddressList1c4313_HasChildrenDefault(void* ptr, void* parent);
void* AddressList1c4313_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char AddressList1c4313_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char AddressList1c4313_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList AddressList1c4313_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList AddressList1c4313_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* AddressList1c4313_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString AddressList1c4313_MimeTypesDefault(void* ptr);
char AddressList1c4313_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char AddressList1c4313_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* AddressList1c4313_ParentDefault(void* ptr, void* index);
char AddressList1c4313_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char AddressList1c4313_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void AddressList1c4313_ResetInternalDataDefault(void* ptr);
void AddressList1c4313_RevertDefault(void* ptr);
struct Moc_PackedList AddressList1c4313_RoleNamesDefault(void* ptr);
int AddressList1c4313_RowCountDefault(void* ptr, void* parent);
char AddressList1c4313_SetDataDefault(void* ptr, void* index, void* value, int role);
char AddressList1c4313_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char AddressList1c4313_SetItemDataDefault(void* ptr, void* index, void* roles);
void AddressList1c4313_SortDefault(void* ptr, int column, long long order);
void* AddressList1c4313_SpanDefault(void* ptr, void* index);
char AddressList1c4313_SubmitDefault(void* ptr);
long long AddressList1c4313_SupportedDragActionsDefault(void* ptr);
long long AddressList1c4313_SupportedDropActionsDefault(void* ptr);
void AddressList1c4313_ChildEventDefault(void* ptr, void* event);
void AddressList1c4313_ConnectNotifyDefault(void* ptr, void* sign);
void AddressList1c4313_CustomEventDefault(void* ptr, void* event);
void AddressList1c4313_DeleteLaterDefault(void* ptr);
void AddressList1c4313_DisconnectNotifyDefault(void* ptr, void* sign);
char AddressList1c4313_EventDefault(void* ptr, void* e);
char AddressList1c4313_EventFilterDefault(void* ptr, void* watched, void* event);
void AddressList1c4313_TimerEventDefault(void* ptr, void* event);
void* TransactionDetails1c4313_Date(void* ptr);
void* TransactionDetails1c4313_DateDefault(void* ptr);
void TransactionDetails1c4313_SetDate(void* ptr, void* date);
void TransactionDetails1c4313_SetDateDefault(void* ptr, void* date);
void TransactionDetails1c4313_ConnectDateChanged(void* ptr);
void TransactionDetails1c4313_DisconnectDateChanged(void* ptr);
void TransactionDetails1c4313_DateChanged(void* ptr, void* date);
int TransactionDetails1c4313_Status(void* ptr);
int TransactionDetails1c4313_StatusDefault(void* ptr);
void TransactionDetails1c4313_SetStatus(void* ptr, int status);
void TransactionDetails1c4313_SetStatusDefault(void* ptr, int status);
void TransactionDetails1c4313_ConnectStatusChanged(void* ptr);
void TransactionDetails1c4313_DisconnectStatusChanged(void* ptr);
void TransactionDetails1c4313_StatusChanged(void* ptr, int status);
int TransactionDetails1c4313_Type(void* ptr);
int TransactionDetails1c4313_TypeDefault(void* ptr);
void TransactionDetails1c4313_SetType(void* ptr, int ty);
void TransactionDetails1c4313_SetTypeDefault(void* ptr, int ty);
void TransactionDetails1c4313_ConnectTypeChanged(void* ptr);
void TransactionDetails1c4313_DisconnectTypeChanged(void* ptr);
void TransactionDetails1c4313_TypeChanged(void* ptr, int ty);
int TransactionDetails1c4313_Amount(void* ptr);
int TransactionDetails1c4313_AmountDefault(void* ptr);
void TransactionDetails1c4313_SetAmount(void* ptr, int amount);
void TransactionDetails1c4313_SetAmountDefault(void* ptr, int amount);
void TransactionDetails1c4313_ConnectAmountChanged(void* ptr);
void TransactionDetails1c4313_DisconnectAmountChanged(void* ptr);
void TransactionDetails1c4313_AmountChanged(void* ptr, int amount);
int TransactionDetails1c4313_HoursReceived(void* ptr);
int TransactionDetails1c4313_HoursReceivedDefault(void* ptr);
void TransactionDetails1c4313_SetHoursReceived(void* ptr, int hoursReceived);
void TransactionDetails1c4313_SetHoursReceivedDefault(void* ptr, int hoursReceived);
void TransactionDetails1c4313_ConnectHoursReceivedChanged(void* ptr);
void TransactionDetails1c4313_DisconnectHoursReceivedChanged(void* ptr);
void TransactionDetails1c4313_HoursReceivedChanged(void* ptr, int hoursReceived);
int TransactionDetails1c4313_HoursBurned(void* ptr);
int TransactionDetails1c4313_HoursBurnedDefault(void* ptr);
void TransactionDetails1c4313_SetHoursBurned(void* ptr, int hoursBurned);
void TransactionDetails1c4313_SetHoursBurnedDefault(void* ptr, int hoursBurned);
void TransactionDetails1c4313_ConnectHoursBurnedChanged(void* ptr);
void TransactionDetails1c4313_DisconnectHoursBurnedChanged(void* ptr);
void TransactionDetails1c4313_HoursBurnedChanged(void* ptr, int hoursBurned);
struct Moc_PackedString TransactionDetails1c4313_TransactionID(void* ptr);
struct Moc_PackedString TransactionDetails1c4313_TransactionIDDefault(void* ptr);
void TransactionDetails1c4313_SetTransactionID(void* ptr, struct Moc_PackedString transactionID);
void TransactionDetails1c4313_SetTransactionIDDefault(void* ptr, struct Moc_PackedString transactionID);
void TransactionDetails1c4313_ConnectTransactionIDChanged(void* ptr);
void TransactionDetails1c4313_DisconnectTransactionIDChanged(void* ptr);
void TransactionDetails1c4313_TransactionIDChanged(void* ptr, struct Moc_PackedString transactionID);
struct Moc_PackedString TransactionDetails1c4313_SentAddress(void* ptr);
struct Moc_PackedString TransactionDetails1c4313_SentAddressDefault(void* ptr);
void TransactionDetails1c4313_SetSentAddress(void* ptr, struct Moc_PackedString sentAddress);
void TransactionDetails1c4313_SetSentAddressDefault(void* ptr, struct Moc_PackedString sentAddress);
void TransactionDetails1c4313_ConnectSentAddressChanged(void* ptr);
void TransactionDetails1c4313_DisconnectSentAddressChanged(void* ptr);
void TransactionDetails1c4313_SentAddressChanged(void* ptr, struct Moc_PackedString sentAddress);
struct Moc_PackedString TransactionDetails1c4313_ReceivedAddress(void* ptr);
struct Moc_PackedString TransactionDetails1c4313_ReceivedAddressDefault(void* ptr);
void TransactionDetails1c4313_SetReceivedAddress(void* ptr, struct Moc_PackedString receivedAddress);
void TransactionDetails1c4313_SetReceivedAddressDefault(void* ptr, struct Moc_PackedString receivedAddress);
void TransactionDetails1c4313_ConnectReceivedAddressChanged(void* ptr);
void TransactionDetails1c4313_DisconnectReceivedAddressChanged(void* ptr);
void TransactionDetails1c4313_ReceivedAddressChanged(void* ptr, struct Moc_PackedString receivedAddress);
void* TransactionDetails1c4313_Inputs(void* ptr);
void* TransactionDetails1c4313_InputsDefault(void* ptr);
void TransactionDetails1c4313_SetInputs(void* ptr, void* inputs);
void TransactionDetails1c4313_SetInputsDefault(void* ptr, void* inputs);
void TransactionDetails1c4313_ConnectInputsChanged(void* ptr);
void TransactionDetails1c4313_DisconnectInputsChanged(void* ptr);
void TransactionDetails1c4313_InputsChanged(void* ptr, void* inputs);
void* TransactionDetails1c4313_Outputs(void* ptr);
void* TransactionDetails1c4313_OutputsDefault(void* ptr);
void TransactionDetails1c4313_SetOutputs(void* ptr, void* outputs);
void TransactionDetails1c4313_SetOutputsDefault(void* ptr, void* outputs);
void TransactionDetails1c4313_ConnectOutputsChanged(void* ptr);
void TransactionDetails1c4313_DisconnectOutputsChanged(void* ptr);
void TransactionDetails1c4313_OutputsChanged(void* ptr, void* outputs);
int TransactionDetails1c4313_TransactionDetails1c4313_QRegisterMetaType();
int TransactionDetails1c4313_TransactionDetails1c4313_QRegisterMetaType2(char* typeName);
int TransactionDetails1c4313_TransactionDetails1c4313_QmlRegisterType();
int TransactionDetails1c4313_TransactionDetails1c4313_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* TransactionDetails1c4313___children_atList(void* ptr, int i);
void TransactionDetails1c4313___children_setList(void* ptr, void* i);
void* TransactionDetails1c4313___children_newList(void* ptr);
void* TransactionDetails1c4313___dynamicPropertyNames_atList(void* ptr, int i);
void TransactionDetails1c4313___dynamicPropertyNames_setList(void* ptr, void* i);
void* TransactionDetails1c4313___dynamicPropertyNames_newList(void* ptr);
void* TransactionDetails1c4313___findChildren_atList(void* ptr, int i);
void TransactionDetails1c4313___findChildren_setList(void* ptr, void* i);
void* TransactionDetails1c4313___findChildren_newList(void* ptr);
void* TransactionDetails1c4313___findChildren_atList3(void* ptr, int i);
void TransactionDetails1c4313___findChildren_setList3(void* ptr, void* i);
void* TransactionDetails1c4313___findChildren_newList3(void* ptr);
void* TransactionDetails1c4313___qFindChildren_atList2(void* ptr, int i);
void TransactionDetails1c4313___qFindChildren_setList2(void* ptr, void* i);
void* TransactionDetails1c4313___qFindChildren_newList2(void* ptr);
void* TransactionDetails1c4313_NewTransactionDetails(void* parent);
void TransactionDetails1c4313_DestroyTransactionDetails(void* ptr);
void TransactionDetails1c4313_DestroyTransactionDetailsDefault(void* ptr);
void TransactionDetails1c4313_ChildEventDefault(void* ptr, void* event);
void TransactionDetails1c4313_ConnectNotifyDefault(void* ptr, void* sign);
void TransactionDetails1c4313_CustomEventDefault(void* ptr, void* event);
void TransactionDetails1c4313_DeleteLaterDefault(void* ptr);
void TransactionDetails1c4313_DisconnectNotifyDefault(void* ptr, void* sign);
char TransactionDetails1c4313_EventDefault(void* ptr, void* e);
char TransactionDetails1c4313_EventFilterDefault(void* ptr, void* watched, void* event);
void TransactionDetails1c4313_TimerEventDefault(void* ptr, void* event);
struct Moc_PackedString Wallet1c4313_Name(void* ptr);
struct Moc_PackedString Wallet1c4313_NameDefault(void* ptr);
void Wallet1c4313_SetName(void* ptr, struct Moc_PackedString name);
void Wallet1c4313_SetNameDefault(void* ptr, struct Moc_PackedString name);
void Wallet1c4313_ConnectNameChanged(void* ptr);
void Wallet1c4313_DisconnectNameChanged(void* ptr);
void Wallet1c4313_NameChanged(void* ptr, struct Moc_PackedString name);
int Wallet1c4313_EncryptionEnabled(void* ptr);
int Wallet1c4313_EncryptionEnabledDefault(void* ptr);
void Wallet1c4313_SetEncryptionEnabled(void* ptr, int encryptionEnabled);
void Wallet1c4313_SetEncryptionEnabledDefault(void* ptr, int encryptionEnabled);
void Wallet1c4313_ConnectEncryptionEnabledChanged(void* ptr);
void Wallet1c4313_DisconnectEncryptionEnabledChanged(void* ptr);
void Wallet1c4313_EncryptionEnabledChanged(void* ptr, int encryptionEnabled);
int Wallet1c4313_Sky(void* ptr);
int Wallet1c4313_SkyDefault(void* ptr);
void Wallet1c4313_SetSky(void* ptr, int sky);
void Wallet1c4313_SetSkyDefault(void* ptr, int sky);
void Wallet1c4313_ConnectSkyChanged(void* ptr);
void Wallet1c4313_DisconnectSkyChanged(void* ptr);
void Wallet1c4313_SkyChanged(void* ptr, int sky);
int Wallet1c4313_CoinHours(void* ptr);
int Wallet1c4313_CoinHoursDefault(void* ptr);
void Wallet1c4313_SetCoinHours(void* ptr, int coinHours);
void Wallet1c4313_SetCoinHoursDefault(void* ptr, int coinHours);
void Wallet1c4313_ConnectCoinHoursChanged(void* ptr);
void Wallet1c4313_DisconnectCoinHoursChanged(void* ptr);
void Wallet1c4313_CoinHoursChanged(void* ptr, int coinHours);
struct Moc_PackedString Wallet1c4313_FileName(void* ptr);
struct Moc_PackedString Wallet1c4313_FileNameDefault(void* ptr);
void Wallet1c4313_SetFileName(void* ptr, struct Moc_PackedString fileName);
void Wallet1c4313_SetFileNameDefault(void* ptr, struct Moc_PackedString fileName);
void Wallet1c4313_ConnectFileNameChanged(void* ptr);
void Wallet1c4313_DisconnectFileNameChanged(void* ptr);
void Wallet1c4313_FileNameChanged(void* ptr, struct Moc_PackedString fileName);
int Wallet1c4313_Wallet1c4313_QRegisterMetaType();
int Wallet1c4313_Wallet1c4313_QRegisterMetaType2(char* typeName);
int Wallet1c4313_Wallet1c4313_QmlRegisterType();
int Wallet1c4313_Wallet1c4313_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
void* Wallet1c4313___children_atList(void* ptr, int i);
void Wallet1c4313___children_setList(void* ptr, void* i);
void* Wallet1c4313___children_newList(void* ptr);
void* Wallet1c4313___dynamicPropertyNames_atList(void* ptr, int i);
void Wallet1c4313___dynamicPropertyNames_setList(void* ptr, void* i);
void* Wallet1c4313___dynamicPropertyNames_newList(void* ptr);
void* Wallet1c4313___findChildren_atList(void* ptr, int i);
void Wallet1c4313___findChildren_setList(void* ptr, void* i);
void* Wallet1c4313___findChildren_newList(void* ptr);
void* Wallet1c4313___findChildren_atList3(void* ptr, int i);
void Wallet1c4313___findChildren_setList3(void* ptr, void* i);
void* Wallet1c4313___findChildren_newList3(void* ptr);
void* Wallet1c4313___qFindChildren_atList2(void* ptr, int i);
void Wallet1c4313___qFindChildren_setList2(void* ptr, void* i);
void* Wallet1c4313___qFindChildren_newList2(void* ptr);
void* Wallet1c4313_NewWallet(void* parent);
void Wallet1c4313_DestroyWallet(void* ptr);
void Wallet1c4313_DestroyWalletDefault(void* ptr);
void Wallet1c4313_ChildEventDefault(void* ptr, void* event);
void Wallet1c4313_ConnectNotifyDefault(void* ptr, void* sign);
void Wallet1c4313_CustomEventDefault(void* ptr, void* event);
void Wallet1c4313_DeleteLaterDefault(void* ptr);
void Wallet1c4313_DisconnectNotifyDefault(void* ptr, void* sign);
char Wallet1c4313_EventDefault(void* ptr, void* e);
char Wallet1c4313_EventFilterDefault(void* ptr, void* watched, void* event);
void Wallet1c4313_TimerEventDefault(void* ptr, void* event);
void WalletModel1c4313_AddWallet(void* ptr, void* v0);
void WalletModel1c4313_EditWallet(void* ptr, int row, struct Moc_PackedString name, char encryptionEnabled, int sky, int coinHours);
void WalletModel1c4313_RemoveWallet(void* ptr, int row);
void WalletModel1c4313_LoadModel(void* ptr);
struct Moc_PackedList WalletModel1c4313_Roles(void* ptr);
struct Moc_PackedList WalletModel1c4313_RolesDefault(void* ptr);
void WalletModel1c4313_SetRoles(void* ptr, void* roles);
void WalletModel1c4313_SetRolesDefault(void* ptr, void* roles);
void WalletModel1c4313_ConnectRolesChanged(void* ptr);
void WalletModel1c4313_DisconnectRolesChanged(void* ptr);
void WalletModel1c4313_RolesChanged(void* ptr, void* roles);
struct Moc_PackedList WalletModel1c4313_Wallets(void* ptr);
struct Moc_PackedList WalletModel1c4313_WalletsDefault(void* ptr);
void WalletModel1c4313_SetWallets(void* ptr, void* wallets);
void WalletModel1c4313_SetWalletsDefault(void* ptr, void* wallets);
void WalletModel1c4313_ConnectWalletsChanged(void* ptr);
void WalletModel1c4313_DisconnectWalletsChanged(void* ptr);
void WalletModel1c4313_WalletsChanged(void* ptr, void* wallets);
int WalletModel1c4313_WalletModel1c4313_QRegisterMetaType();
int WalletModel1c4313_WalletModel1c4313_QRegisterMetaType2(char* typeName);
int WalletModel1c4313_WalletModel1c4313_QmlRegisterType();
int WalletModel1c4313_WalletModel1c4313_QmlRegisterType2(char* uri, int versionMajor, int versionMinor, char* qmlName);
int WalletModel1c4313_____itemData_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____itemData_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____itemData_keyList_newList(void* ptr);
int WalletModel1c4313_____roleNames_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____roleNames_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____roleNames_keyList_newList(void* ptr);
int WalletModel1c4313_____setItemData_roles_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____setItemData_roles_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____setItemData_roles_keyList_newList(void* ptr);
void* WalletModel1c4313___changePersistentIndexList_from_atList(void* ptr, int i);
void WalletModel1c4313___changePersistentIndexList_from_setList(void* ptr, void* i);
void* WalletModel1c4313___changePersistentIndexList_from_newList(void* ptr);
void* WalletModel1c4313___changePersistentIndexList_to_atList(void* ptr, int i);
void WalletModel1c4313___changePersistentIndexList_to_setList(void* ptr, void* i);
void* WalletModel1c4313___changePersistentIndexList_to_newList(void* ptr);
int WalletModel1c4313___dataChanged_roles_atList(void* ptr, int i);
void WalletModel1c4313___dataChanged_roles_setList(void* ptr, int i);
void* WalletModel1c4313___dataChanged_roles_newList(void* ptr);
void* WalletModel1c4313___itemData_atList(void* ptr, int v, int i);
void WalletModel1c4313___itemData_setList(void* ptr, int key, void* i);
void* WalletModel1c4313___itemData_newList(void* ptr);
struct Moc_PackedList WalletModel1c4313___itemData_keyList(void* ptr);
void* WalletModel1c4313___layoutAboutToBeChanged_parents_atList(void* ptr, int i);
void WalletModel1c4313___layoutAboutToBeChanged_parents_setList(void* ptr, void* i);
void* WalletModel1c4313___layoutAboutToBeChanged_parents_newList(void* ptr);
void* WalletModel1c4313___layoutChanged_parents_atList(void* ptr, int i);
void WalletModel1c4313___layoutChanged_parents_setList(void* ptr, void* i);
void* WalletModel1c4313___layoutChanged_parents_newList(void* ptr);
void* WalletModel1c4313___match_atList(void* ptr, int i);
void WalletModel1c4313___match_setList(void* ptr, void* i);
void* WalletModel1c4313___match_newList(void* ptr);
void* WalletModel1c4313___mimeData_indexes_atList(void* ptr, int i);
void WalletModel1c4313___mimeData_indexes_setList(void* ptr, void* i);
void* WalletModel1c4313___mimeData_indexes_newList(void* ptr);
void* WalletModel1c4313___persistentIndexList_atList(void* ptr, int i);
void WalletModel1c4313___persistentIndexList_setList(void* ptr, void* i);
void* WalletModel1c4313___persistentIndexList_newList(void* ptr);
void* WalletModel1c4313___roleNames_atList(void* ptr, int v, int i);
void WalletModel1c4313___roleNames_setList(void* ptr, int key, void* i);
void* WalletModel1c4313___roleNames_newList(void* ptr);
struct Moc_PackedList WalletModel1c4313___roleNames_keyList(void* ptr);
void* WalletModel1c4313___setItemData_roles_atList(void* ptr, int v, int i);
void WalletModel1c4313___setItemData_roles_setList(void* ptr, int key, void* i);
void* WalletModel1c4313___setItemData_roles_newList(void* ptr);
struct Moc_PackedList WalletModel1c4313___setItemData_roles_keyList(void* ptr);
int WalletModel1c4313_____doSetRoleNames_roleNames_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____doSetRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____doSetRoleNames_roleNames_keyList_newList(void* ptr);
int WalletModel1c4313_____setRoleNames_roleNames_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____setRoleNames_roleNames_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____setRoleNames_roleNames_keyList_newList(void* ptr);
void* WalletModel1c4313___children_atList(void* ptr, int i);
void WalletModel1c4313___children_setList(void* ptr, void* i);
void* WalletModel1c4313___children_newList(void* ptr);
void* WalletModel1c4313___dynamicPropertyNames_atList(void* ptr, int i);
void WalletModel1c4313___dynamicPropertyNames_setList(void* ptr, void* i);
void* WalletModel1c4313___dynamicPropertyNames_newList(void* ptr);
void* WalletModel1c4313___findChildren_atList(void* ptr, int i);
void WalletModel1c4313___findChildren_setList(void* ptr, void* i);
void* WalletModel1c4313___findChildren_newList(void* ptr);
void* WalletModel1c4313___findChildren_atList3(void* ptr, int i);
void WalletModel1c4313___findChildren_setList3(void* ptr, void* i);
void* WalletModel1c4313___findChildren_newList3(void* ptr);
void* WalletModel1c4313___qFindChildren_atList2(void* ptr, int i);
void WalletModel1c4313___qFindChildren_setList2(void* ptr, void* i);
void* WalletModel1c4313___qFindChildren_newList2(void* ptr);
void* WalletModel1c4313___roles_atList(void* ptr, int v, int i);
void WalletModel1c4313___roles_setList(void* ptr, int key, void* i);
void* WalletModel1c4313___roles_newList(void* ptr);
struct Moc_PackedList WalletModel1c4313___roles_keyList(void* ptr);
void* WalletModel1c4313___setRoles_roles_atList(void* ptr, int v, int i);
void WalletModel1c4313___setRoles_roles_setList(void* ptr, int key, void* i);
void* WalletModel1c4313___setRoles_roles_newList(void* ptr);
struct Moc_PackedList WalletModel1c4313___setRoles_roles_keyList(void* ptr);
void* WalletModel1c4313___rolesChanged_roles_atList(void* ptr, int v, int i);
void WalletModel1c4313___rolesChanged_roles_setList(void* ptr, int key, void* i);
void* WalletModel1c4313___rolesChanged_roles_newList(void* ptr);
struct Moc_PackedList WalletModel1c4313___rolesChanged_roles_keyList(void* ptr);
void* WalletModel1c4313___wallets_atList(void* ptr, int i);
void WalletModel1c4313___wallets_setList(void* ptr, void* i);
void* WalletModel1c4313___wallets_newList(void* ptr);
void* WalletModel1c4313___setWallets_wallets_atList(void* ptr, int i);
void WalletModel1c4313___setWallets_wallets_setList(void* ptr, void* i);
void* WalletModel1c4313___setWallets_wallets_newList(void* ptr);
void* WalletModel1c4313___walletsChanged_wallets_atList(void* ptr, int i);
void WalletModel1c4313___walletsChanged_wallets_setList(void* ptr, void* i);
void* WalletModel1c4313___walletsChanged_wallets_newList(void* ptr);
int WalletModel1c4313_____roles_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____roles_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____roles_keyList_newList(void* ptr);
int WalletModel1c4313_____setRoles_roles_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____setRoles_roles_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____setRoles_roles_keyList_newList(void* ptr);
int WalletModel1c4313_____rolesChanged_roles_keyList_atList(void* ptr, int i);
void WalletModel1c4313_____rolesChanged_roles_keyList_setList(void* ptr, int i);
void* WalletModel1c4313_____rolesChanged_roles_keyList_newList(void* ptr);
void* WalletModel1c4313_NewWalletModel(void* parent);
void WalletModel1c4313_DestroyWalletModel(void* ptr);
void WalletModel1c4313_DestroyWalletModelDefault(void* ptr);
char WalletModel1c4313_DropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
long long WalletModel1c4313_FlagsDefault(void* ptr, void* index);
void* WalletModel1c4313_IndexDefault(void* ptr, int row, int column, void* parent);
void* WalletModel1c4313_SiblingDefault(void* ptr, int row, int column, void* idx);
void* WalletModel1c4313_BuddyDefault(void* ptr, void* index);
char WalletModel1c4313_CanDropMimeDataDefault(void* ptr, void* data, long long action, int row, int column, void* parent);
char WalletModel1c4313_CanFetchMoreDefault(void* ptr, void* parent);
int WalletModel1c4313_ColumnCountDefault(void* ptr, void* parent);
void* WalletModel1c4313_DataDefault(void* ptr, void* index, int role);
void WalletModel1c4313_FetchMoreDefault(void* ptr, void* parent);
char WalletModel1c4313_HasChildrenDefault(void* ptr, void* parent);
void* WalletModel1c4313_HeaderDataDefault(void* ptr, int section, long long orientation, int role);
char WalletModel1c4313_InsertColumnsDefault(void* ptr, int column, int count, void* parent);
char WalletModel1c4313_InsertRowsDefault(void* ptr, int row, int count, void* parent);
struct Moc_PackedList WalletModel1c4313_ItemDataDefault(void* ptr, void* index);
struct Moc_PackedList WalletModel1c4313_MatchDefault(void* ptr, void* start, int role, void* value, int hits, long long flags);
void* WalletModel1c4313_MimeDataDefault(void* ptr, void* indexes);
struct Moc_PackedString WalletModel1c4313_MimeTypesDefault(void* ptr);
char WalletModel1c4313_MoveColumnsDefault(void* ptr, void* sourceParent, int sourceColumn, int count, void* destinationParent, int destinationChild);
char WalletModel1c4313_MoveRowsDefault(void* ptr, void* sourceParent, int sourceRow, int count, void* destinationParent, int destinationChild);
void* WalletModel1c4313_ParentDefault(void* ptr, void* index);
char WalletModel1c4313_RemoveColumnsDefault(void* ptr, int column, int count, void* parent);
char WalletModel1c4313_RemoveRowsDefault(void* ptr, int row, int count, void* parent);
void WalletModel1c4313_ResetInternalDataDefault(void* ptr);
void WalletModel1c4313_RevertDefault(void* ptr);
struct Moc_PackedList WalletModel1c4313_RoleNamesDefault(void* ptr);
int WalletModel1c4313_RowCountDefault(void* ptr, void* parent);
char WalletModel1c4313_SetDataDefault(void* ptr, void* index, void* value, int role);
char WalletModel1c4313_SetHeaderDataDefault(void* ptr, int section, long long orientation, void* value, int role);
char WalletModel1c4313_SetItemDataDefault(void* ptr, void* index, void* roles);
void WalletModel1c4313_SortDefault(void* ptr, int column, long long order);
void* WalletModel1c4313_SpanDefault(void* ptr, void* index);
char WalletModel1c4313_SubmitDefault(void* ptr);
long long WalletModel1c4313_SupportedDragActionsDefault(void* ptr);
long long WalletModel1c4313_SupportedDropActionsDefault(void* ptr);
void WalletModel1c4313_ChildEventDefault(void* ptr, void* event);
void WalletModel1c4313_ConnectNotifyDefault(void* ptr, void* sign);
void WalletModel1c4313_CustomEventDefault(void* ptr, void* event);
void WalletModel1c4313_DeleteLaterDefault(void* ptr);
void WalletModel1c4313_DisconnectNotifyDefault(void* ptr, void* sign);
char WalletModel1c4313_EventDefault(void* ptr, void* e);
char WalletModel1c4313_EventFilterDefault(void* ptr, void* watched, void* event);
void WalletModel1c4313_TimerEventDefault(void* ptr, void* event);

#ifdef __cplusplus
}
#endif

#endif